package main

func high(a []int) int {
	return a[len(a)-1]
}

func low(a []int) int {
	return a[0]
}

func mergeOverlapping(a1, a2 []int) []int {
	var res []int

	var posA1 int
	var posA2 int
	for posA1 < len(a1) && posA2 < len(a2) {
		if a1[posA1] > a2[posA2] {
			res = append(res, a2[posA2])
			posA2++
			continue
		}

		res = append(res, a1[posA1])
		posA1++
	}

	if posA1 < len(a1) {
		res = append(res, a1[posA1:]...)
	}

	if posA2 < len(a2) {
		res = append(res, a2[posA2:]...)
	}

	return res
}

func merge2(a1, a2 []int) []int {
	var res []int

	if high(a1) <= low(a2) {
		res = append(res, a1...)
		res = append(res, a2...)

		return res
	}

	if low(a1) >= high(a2) {
		res = append(res, a2...)
		res = append(res, a1...)

		return res
	}

	return mergeOverlapping(a1, a2)
}
