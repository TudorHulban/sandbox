package main

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestLongestDecreaseRange(t *testing.T) {
	testCases := []struct {
		description string
		input       []int
		want        []int
	}{
		{"empty", []int{}, nil},
		{"short", []int{1}, []int{1}},
		{"two", []int{1, 2}, []int{1}},
		{"three", []int{1, 2, 3}, []int{1}},
		{"straight 3", []int{3, 2, 1}, []int{3, 2, 1}},
		{"four", []int{3, 2, 1, 1}, []int{3, 2, 1}},
		{"five", []int{3, 2, 1, 1, 2}, []int{3, 2, 1}},
		{"straight 3 2", []int{3, 2, 1, 3, 2}, []int{3, 2, 1}},
		{"long", []int{12, 9, 10, 8, 6, 5, 3, 4, 2, 1}, []int{10, 8, 6, 5, 3}},
	}

	for _, tc := range testCases {
		t.Run(tc.description, func(t *testing.T) {
			interval := getLongestRange(tc.input)

			assert.Equal(t, tc.want, interval.getRange(tc.input, tc.description))
		})
	}
}

func TestLongestDecreaseValue(t *testing.T) {
	testCases := []struct {
		description string
		input       []int
		want        int
	}{
		{"empty", []int{}, 0},
		{"short", []int{1}, 1},
		{"two", []int{1, 2}, 1},
		{"three", []int{1, 2, 3}, 1},
		{"straight 3", []int{3, 2, 1}, 3},
		{"four", []int{3, 2, 1, 1}, 3},
		{"five", []int{3, 2, 1, 1, 2}, 3},
		{"straight 3 2", []int{3, 2, 1, 3, 2}, 3},
		{"long", []int{12, 9, 10, 8, 6, 5, 3, 4, 2, 1}, 5},
	}

	for _, tc := range testCases {
		t.Run(tc.description, func(t *testing.T) {
			assert.Equal(t, tc.want, parse(tc.input))
		})
	}
}
