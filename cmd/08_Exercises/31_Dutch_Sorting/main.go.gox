package main

// sort01 sorts a slice that contains numbers 0,1
// time complexity O(n)
// space complexity O(2)
func sort01(slice []int) []int {
	high := len(slice) - 1
	low := 0

	for low <= high {
		switch slice[low] {
		case 1:
			slice[low], slice[high] = slice[high], slice[low]
			high--
		}

		low++
	}

	return slice
}

// sort012 sorts a slice that contains numbers 0,1,2
// time complexity O(n)
// space complexity O(3)
func sort012(slice []int) []int {
	high := len(slice) - 1
	low := 0
	mid := 0

	for mid <= high {
		switch slice[mid] {
		case 0:
			slice[mid], slice[low] = slice[low], slice[mid]
			low++

		case 2:
			slice[mid], slice[high] = slice[high], slice[mid]
			high--

			mid--
		}

		mid++
	}

	return slice
}

func main() {}
