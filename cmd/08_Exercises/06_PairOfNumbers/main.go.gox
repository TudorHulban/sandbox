package main

// Find every pair of numbers (including duplicates) from two integer slices
// (i.e. one number from each array), whose sum equals a given number.

// ex.:
// INPUT:
// arr1 := []int{-1, -2, 4, 4, -2, -6, 5, -7}
// arr2 := []int{0, 6, 3, 4, 0}

// for 4 the output should be:

// OUTPUT:
// [[4 0] [4 0] [-2 6] [-2 6] [4 0] [4 0]]

func main() {
}

func sortSliceOfArrays(a [][2]int) {
	var isSorted bool

	for !isSorted {
		isSorted = true

		for i := 0; i < len(a)-1; i++ {
			if a[i][0] > a[i+1][0] {
				a[i], a[i+1] = a[i+1], a[i]

				isSorted = false
				continue
			}
		}
	}
}

func sumOfTwo(slice1, slice2 []int, sumAmount int) [][2]int {
	var result [][2]int

	for _, valueSlice1 := range slice1 {
		for _, valueSlice2 := range slice2 {
			if sumAmount == valueSlice1+valueSlice2 {
				result = append(result, [2]int{valueSlice1, valueSlice2})
			}
		}
	}

	return result
}
