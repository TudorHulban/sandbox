package main

// multiply two strings without converting to integers

import (
	"errors"
	"fmt"
	"strconv"
)

type number string

func (n number) IsNumber() error {
	_, errConv := strconv.Atoi(string(n))

	return errConv
}

func main() {
	a := "11"
	b := "2"

	fmt.Println(conversion(a) * conversion(b))
}

func multiply(a, b number) (int, error) {
	if a.IsNumber() != nil || b.IsNumber() != nil {
		return 0, errors.New("at least one string is not integer representation")
	}

	return conversion(string(a)) * conversion(string(b)), nil
}

func conversion(s string) int {
	// TODO: add input validation by comparing to rune of zero

	var sum int

	for i := len(s) - 1; i >= 0; i-- {
		var buf int

		if i == 0 {
			buf = int(rune(s[i]) - rune('0'))
		}

		if i > 0 {
			buf = i * 10 * int(rune(s[i])-rune('0'))
		}

		sum = sum + buf
	}

	return sum
}
