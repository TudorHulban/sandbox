package main

// TODO: assess error handling

import (
	"fmt"
)

type stack []int

func main() {
	var s stack
	s.push(1)
	s.push(2)
	s.push(3)
	s.push(4)

	fmt.Println(s)

	// fmt.Println(s.pop())
	// fmt.Println(s)

	s.reverse()
	fmt.Println(s)
}

func (s *stack) push(el int) {
	new := []int{el}

	*s = append(new, *s...)
}

func (s *stack) pop() int {
	if len(*s) == 0 {
		return 0
	}

	res := (*s)[0]

	*s = (*s)[1:]

	return res
}

func (s *stack) reverse() {
	curr := s.pop()

	if len(*s) == 0 {
		s.push(curr)
		return
	}

	s.reverse()
	*s = append(*s, curr)
}
