package main

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestIsRodValid(t *testing.T) {
	testCases := []struct {
		description string
		input       rod
		want        bool
	}{
		{"nil", rod{}, true},
		{"one disk", rod{1}, true},
		{"two disks", rod{2, 1}, true},
		{"three disks", rod{3, 2, 1}, true},
		{"invalid 1", rod{1, 2}, false},
		{"invalid 2", rod{2, 3, 1}, false},
	}

	for _, tc := range testCases {
		t.Run(tc.description, func(t *testing.T) {
			assert.Equal(t, tc.want, tc.input.isValid())
		})
	}
}

func TestIsStateValid(t *testing.T) {
	testCases := []struct {
		description string
		input       state
		want        bool
	}{
		{"nil", state{}, true},
		{"init", state{rodFrom: rod{3, 2, 1}}, true},
		{"happy 1", state{rodFrom: rod{3, 2}, rodTo: rod{1}}, true},
		{"happy 2", state{rodFrom: rod{3, 2}, rodTo: rod{1}, rodAux: rod{4}}, true},
		{"invalid", state{rodFrom: rod{3}, rodTo: rod{1, 4}, rodAux: rod{2}}, false},
	}

	for _, tc := range testCases {
		t.Run(tc.description, func(t *testing.T) {
			assert.Equal(t, tc.want, tc.input.isValid())
		})
	}
}
